{"version":3,"file":"component---src-pages-archive-js-79d86f494b3d6bb92f44.js","mappings":"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","sources":["webpack://v2/./src/pages/archive.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { graphql,Link, navigate } from 'gatsby';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\nimport sr from '@utils/sr';\r\nimport { srConfig } from '@config';\r\nimport { Layout } from '@components';\r\nimport { FormattedIcon } from '@components/icons';\r\nimport styled from 'styled-components';\r\nimport { theme, mixins, media, Main } from '@styles';\r\nconst { colors, fonts, fontSizes } = theme;\r\n\r\nconst StyledMainContainer = styled(Main)``;\r\nconst StyledTableContainer = styled.div`\r\n  margin: 100px -20px;\r\n  ${media.tablet`\r\n    margin: 100px -10px;\r\n  `};\r\n`;\r\nconst StyledTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n\r\n  .hide-on-mobile {\r\n    ${media.tablet`\r\n      display: none;\r\n    `};\r\n  }\r\n\r\n  tbody tr {\r\n    transition: ${theme.transition};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      background-color: ${colors.lightNavy};\r\n    }\r\n  }\r\n  th,\r\n  td {\r\n    cursor: default;\r\n    line-height: 1.5;\r\n    padding: 10px 20px;\r\n    ${media.tablet`\r\n      padding: 10px;\r\n    `};\r\n  }\r\n  th {\r\n    text-align: left;\r\n  }\r\n  td {\r\n    &.year {\r\n      width: 10%;\r\n      ${media.tablet`\r\n        font-size: ${fontSizes.sm};\r\n      `};\r\n    }\r\n    &.title {\r\n      padding-top: 15px;\r\n      color: ${colors.lightestSlate};\r\n      font-size: ${fontSizes.xl};\r\n      font-weight: 700;\r\n    }\r\n    &.company {\r\n      width: 15%;\r\n      padding-top: 15px;\r\n      font-size: ${fontSizes.lg};\r\n    }\r\n    &.tech {\r\n      font-size: ${fontSizes.xs};\r\n      font-family: ${fonts.SFMono};\r\n      .separator {\r\n        margin: 0 5px;\r\n      }\r\n      span {\r\n        display: inline-block;\r\n      }\r\n    }\r\n    &.links {\r\n      span {\r\n        display: flex;\r\n        align-items: center;\r\n        a {\r\n          ${mixins.flexCenter};\r\n        }\r\n        a + a {\r\n          margin-left: 10px;\r\n        }\r\n        svg {\r\n          width: 20px;\r\n          height: 20px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst StyledArchiveLink = styled(Link)`\r\n  ${mixins.inlineLink};\r\n  text-align: left;\r\n  margin: 0 auto;\r\n  font-family: ${fonts.SFMono};\r\n  font-size: ${fontSizes.sm};\r\n  &:after {\r\n    bottom: 0.1em;\r\n  }\r\n`;\r\nconst ArchivePage = ({ location, data }) => {\r\n  const projects = data.allMarkdownRemark.nodes;\r\n\r\n  const revealTitle = useRef(null);\r\n  const revealTable = useRef(null);\r\n  const revealProjects = useRef([]);\r\n  useEffect(() => {\r\n    sr.reveal(revealTitle.current, srConfig());\r\n    sr.reveal(revealTable.current, srConfig());\r\n    revealProjects.current.forEach((ref, i) => sr.reveal(ref, srConfig(i * 10)));\r\n  }, []);\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <Helmet>\r\n        <title>Archive | Ryan Taylor</title>\r\n        <link rel=\"canonical\" href=\"https://mywebsite-e2a61.web.app//archive\" />\r\n      </Helmet>\r\n\r\n      <StyledMainContainer>\r\n        <header ref={revealTitle}>\r\n          <h1 className=\"big-title\">Archive</h1>\r\n          <p className=\"subtitle\">A Compendium of Things I’ve worked on</p>\r\n        </header>\r\n\r\n        <StyledTableContainer ref={revealTable}>\r\n          <StyledTable>\r\n            <thead>\r\n              <tr>\r\n                <th>Year</th>\r\n                <th>Title</th>\r\n                <th className=\"hide-on-mobile\">Made at</th>\r\n                <th className=\"hide-on-mobile\">Built with</th>\r\n                <th>Links</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {projects.length > 0 &&\r\n                projects.map((project, i) => {\r\n                  const { date, github, external, title, tech, company,slug,id } = project.frontmatter;\r\n                  return (\r\n                    <tr key={i} ref={el => (revealProjects.current[i] = el)} onClick={()=>navigate(\"/project_page/\"+slug)}>\r\n                      <td className=\"overline year\">{`${new Date(date).getFullYear()}`}</td>\r\n\r\n                      <td className=\"title\">{title}</td>\r\n\r\n                      <td className=\"company hide-on-mobile\">\r\n                        {company ? <span>{company}</span> : <span>—</span>}\r\n                      </td>\r\n\r\n                      <td className=\"tech hide-on-mobile\">\r\n                        {tech.length > 0 &&\r\n                          tech.map((item, i) => (\r\n                            <span key={i}>\r\n                              {item}\r\n                              {''}\r\n                              {i !== tech.length - 1 && <span className=\"separator\">&middot;</span>}\r\n                            </span>\r\n                          ))}\r\n                      </td>\r\n\r\n                      <td className=\"links\">\r\n                        <span>\r\n                          {external && (\r\n                            <a\r\n                              href={external}\r\n                              target=\"_blank\"\r\n                              rel=\"nofollow noopener noreferrer\"\r\n                              aria-label=\"External Link\">\r\n                              <FormattedIcon name=\"External\" />\r\n                            </a>\r\n                          )}\r\n                          {github && (\r\n                            <a\r\n                              href={github}\r\n                              target=\"_blank\"\r\n                              rel=\"nofollow noopener noreferrer\"\r\n                              aria-label=\"GitHub Link\">\r\n                              <FormattedIcon name=\"GitHub\" />\r\n                            </a>\r\n                          )}\r\n                        </span>\r\n                      </td>                  \r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </StyledTable>\r\n        </StyledTableContainer>\r\n      </StyledMainContainer>\r\n    </Layout>\r\n  );\r\n};\r\nArchivePage.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ArchivePage;\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    allMarkdownRemark(\r\n      filter: {fileAbsolutePath: {regex: \"/pages/project_page/\"}}\r\n      sort: {fields: frontmatter___date, order: DESC}\r\n    ) {\r\n      nodes {\r\n        frontmatter {\r\n          slug\r\n          external\r\n          github\r\n          date\r\n          title\r\n          tech\r\n          company\r\n        }\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["colors","fonts","fontSizes","theme","StyledMainContainer","styled","Main","withConfig","displayName","componentId","StyledTableContainer","div","media","tablet","_templateObject","_taggedTemplateLiteralLoose","StyledTable","table","_templateObject2","transition","lightNavy","_templateObject3","_templateObject4","sm","lightestSlate","xl","lg","xs","SFMono","mixins","flexCenter","Link","inlineLink","_ref","location","data","projects","allMarkdownRemark","nodes","revealTitle","useRef","revealTable","revealProjects","useEffect","sr","reveal","current","srConfig","forEach","ref","i","React","Layout","Helmet","rel","href","className","length","map","project","date","github","external","title","tech","company","slug","id","frontmatter","key","el","onClick","navigate","Date","getFullYear","item","target","FormattedIcon","name"],"sourceRoot":""}